@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Countersoft.Foundation.Commons.Extensions
@using Countersoft.Gemini.Models
@using Countersoft.Gemini
@using System.Linq
@model Countersoft.Gemini.Models.TestRunModel

@if (!Model.ValidToRun)
{
    <text>Please make sure that you have at least one test case with a step to run.</text> 
    
}
else if (!Model.RunPlaying)
{
    <div class="AppStore testing">
        <form id="TestRunnerForm">
        <div id="test-run-play-container" class="box-background" style="margin-left:20px; padding:10px; display:inline-block">
            <table>
                <tr class="no-hover">
                    <td>
                        @if (Model.RunModel.Values.Count() > 0)
                        {                            
                            @Html.Partial(Model.RunModel.TemplateFile, Model.RunModel)
                            <br />
                            <br />
                        }
                        <div class="run-name-container">
                            <h4>
                                @GetResource(ResourceKeys.RunName)
                            </h4>
                            <br />
                            <div style="margin-top:5px;">
                                @Html.TextBox("new-run-name", null, new { @class = "input-size6" })
                            </div>
                        </div>
                    </td>
                    <td style="padding: 0 30px;">
                        <div id="run-button-container">
                            <input type="button" class="button-primary" value="@GetResource(ResourceKeys.Start)" id="run-button" />
                        </div>

                    </td>
                </tr>

            </table>
        </div>
        </form>
    </div>
    
    <script type="text/javascript">

        gemini_commons.inputKeyHandler("#TestRunnerForm #new-run-name",  function () { $('#TestRunnerForm #run-button').click();   });
        $('#PendingRun').removeClass('inline-editing');
        $("#run-button").click(function (e) {
            gemini_commons.stopClick(e);
            var newname = $("#new-run-name");
            var pendingRun = $("#PendingRun").val();
            var plan = @(Model.Info.PlanId);
            if (newname.val() == '' && pendingRun == '0') {
                newname.addClass("error");
                return;   
            }
            gemini_ui.startBusy('#TestRunnerForm #run-button');
            gemini_ajax.postCall("apps/countersoft/testing/runner", "run", function(response) {
                $("#TestRunnerForm").closest("div.contents").html(response.Result.Data.Html);
                gemini_ui.stopBusy('#TestRunnerForm #run-button');
                gemini_item.setContentHeight();
            }, function() {gemini_ui.stopBusy('#TestRunnerForm #run-button');}, { planId: plan, newname: newname.val(), cloneRun: true, pendingRun: pendingRun }, null, true);

        });

        $("#PendingRun").change(function() {
            var dd = $("#PendingRun");
            if(dd.val() > 0)
                dd.removeClass("error");
        });

        gemini_ui.chosen("#PendingRun");

    </script>
}
else
{
    <div class="AppStore testing">
        <div id="slider" data-planid='@Model.Info.PlanId' data-runid='@Model.Info.RunId' data-caseid='@Model.Info.CaseId' >
            @if (Model.RunnerInfo.RunInfo.Any())
            {
                @Html.Partial("~/views/testing/_TestRunner.cshtml", Model.RunnerInfo);
            }
        </div>
    </div>


    <script type="text/javascript">
    var container = $('#slider').parent();
    var planId = $('#slider').data('planid');
    var runId = $('#slider').data('runid');
    var caseId = $('#slider').data('caseid');
    var slider;
    var needRefreshRun = false;

    $(document).ready(function () {
        var info = @(Html.Raw(Model.RunnerInfo.RunInfo.ToJson()));
        slider = $("#slider").numberSlider({ speed: 300, info: info });
        gemini_ui.chosen("#slider #Case");

        AttachmentFileUploader($(".test-run-uploader"));

    });

    function AttachmentFileUploader(element)//,tempDropzone)
    {
        var tempDropzone;
        var template = '<li>' +
                '<span class="qq-upload-file"></span>' +
                '<span class="qq-upload-spinner"></span>' +
                '<span class="qq-upload-size"></span>' +
                '<a class="qq-upload-cancel" href="#">@GetResource(ResourceKeys.Cancel)</a>' +
                '<span class="qq-upload-failed-text">@GetResource(ResourceKeys.Failed)</span>' +
                '<span class="fonticon-cross"></span>' +
            '</li>';



        var attachmentUploader = new qq.FileUploader({
            element: element[0],
            action: gemini_ajax.getUrl("apps/countersoft/testing/runner", "uploadfile", true),
            debug: false,
            onSubmit: function(_id, fileName) {
                var step = $('ol li.current').attr('id');
                var stepId = step.replace('step-', '');
                attachmentUploader.setParams({ stepId: stepId, runId: runId });
            },
            onComplete: function (_id, fileName, responseJSON) {
                if (responseJSON.success) {
                    var step = $('ol li.current').attr('id');
                    var stepId = step.replace('step-', '');
                    $("#runner-attachment-container-" + stepId).html(responseJSON.Html);
                    $(".qq-uploader .qq-upload-list .qq-upload-success").hide();
                }
                $(".qq-upload-fail .fonticon-cross").click(function() {
                    $(this).parent().remove();
                });
            },
            taxonomy: {
                uploadButton: "<a class='action-link'>@(GetResource(ResourceKeys.Add))</a>",
                dropZone: "@(GetResource(ResourceKeys.DropZoneText))"

            },
            fileTemplate: template
        });

    }
    $('#slider .show-case-details').click(function () {
        if ($(this).hasClass('fonticon-arrow-right'))
        {
            $(this).removeClass('fonticon-arrow-right').addClass('fonticon-arrow-down');
            $('#slider .additional-case-data').show();
        }
        else
        {
            $(this).removeClass('fonticon-arrow-down').addClass('fonticon-arrow-right');
            $('#slider .additional-case-data').hide();
        }
        gemini_item.setContentHeight();
    });

    $(document).on("click", ".attachments-container .action-button-delete", function(e) {

        gemini_commons.stopClick(e);
        var _this = $(this);
        var name = _this.parent().text();
        var id = _this.data("id");

        gemini_commons.translateMessage("[[Delete]] " + name, ['Delete'], function(message) {
            gemini_popup.modalConfirm(message, null, function() {
                gemini_ajax.call("apps/countersoft/testing/runner", "deletefile/" + id, function() {
                    _this.closest("div.attachment").remove();
                }, null, null, null, true);
            });
        });

    });

    $("#slider #Case").change(function() {

        var planId = $('#slider').data('planid');
        var runId = $('#slider').data('runid');
        var caseId = $(this).val();

        gemini_ajax.call("apps/countersoft/testing/runner", "run",
            function (response) {
                var showDetails = $('#slider .show-case-details').hasClass('fonticon-arrow-down');
                $("#slider").parent().html(response.Result.Data.Html);
                if (showDetails) $('#slider .show-case-details').click();
            }, null, { planid: planId, pendingRun: runId, caseId: caseId }, null, true);
    });

    $("#run-pass").click(function (e) {

        gemini_ui.startBusy('.runner-controls #run-pass');
        //var stepId = parseInt($('ol li.current a').attr('rel'));
        var step = $('ol li.current').attr('id');
        var stepId = step.replace('step-', '');
        var actual = $('#actual-' + stepId, '#slider').val();

        gemini_ajax.call("apps/countersoft/testing/runner", "pass",
            function (response) {
                gemini_ui.stopBusy('.runner-controls #run-pass');

                if(response.Result.Data == "refresh") {
                    gemini_commons.refreshPage();
                    return;
                }

                var showDetails = $('#slider .show-case-details').hasClass('fonticon-arrow-down');
                $("#slider").closest("div.contents").html(response.Result.Data.Html);
                if (showDetails) $('#slider .show-case-details').click();
            },
            function (xhr, ajaxOptions, thrownError) {
                gemini_ui.stopBusy('.runner-controls #run-pass');
            }, { planid: planId, runid: runId, stepid: stepId, actual: actual }, null, true);
    });

    $("#run-fail").click(function (e) {
        failstep(true, ".runner-controls #run-fail");
    });

    function failstep(allowRefresh, button) {
        var step = $('ol li.current').attr('id');
        var stepId = step.replace('step-', '');
        var actual = $('#actual-' + stepId, '#slider');

        if(actual.val() == '') {
            actual.addClass("error");
            $('#actual-' + stepId, '#slider').focus();
            return;
        }

        if (button) gemini_ui.startBusy(button);

        needRefreshRun = false;

        gemini_ajax.call("apps/countersoft/testing/runner", "fail",
            function (response) {
                if (button) gemini_ui.stopBusy(button);
                if(response.Result.Data == "refresh") {
                    if(allowRefresh)
                    {
                        gemini_commons.refreshPage();
                    }
                    else
                    {
                        needRefreshRun = true;
                    }
                    return;
                }
                var showDetails = $('#slider .show-case-details').hasClass('fonticon-arrow-down');
                $("#slider").closest("div.contents").html(response.Result.Data.Html);
                if (showDetails) $('#slider .show-case-details').click();

                // TODO = need to popoup a dialog to collect the error data
                // this will need to call back to
                //          'apps/countersoft/testing/runner/failsave',
            },
            function (xhr, ajaxOptions, thrownError) {
                if (button) gemini_ui.stopBusy(button);
            }, { planid: planId, runid: runId, stepid: stepId, actual : actual.val() }, null, true);
    }

    var manualFailed = false;
    $("#run-fail-create").click(function(e) {
        var step = $('ol li.current').attr('id');
        var stepText = $(".testing #inner .step[data-stepid='"+step+"'] tr:first td:eq(1)").text();
        var stepId = step.replace('step-', '');
        var actual = $('#actual-' + stepId, '#slider');
        var expected = $('#expected-' + stepId, '#slider');
        var caseId = $("#slider").data("caseid");
        var runId = $("#slider").data("runid");
        var planId = $("#slider").data("planid");
        if(actual.val() == '') {
            actual.addClass("error");
            actual.focus();
            return;
        }

        gemini_ui.startBusy("#run-fail-create");

        gemini_add.newItemBeforeRenderedCallback = function () {
            gemini_add.addUrl = 'project/' + "@(Model.NonTestProject.Key)/";
        };
        manualFailed = true;
        var renderItemCallback = function() {
            var popup = $("#cs-popup-add");
           
            if(manualFailed && $("#ProjectName",popup).length > 0)
            {
                var newProjectId = "@(Model.NonTestProject.Key)";
                if ($("#ProjectName",popup).val() != newProjectId)
                {
                    $("#ProjectName",popup).val(newProjectId);
                    gemini_add.triggerChange($("#ProjectName",popup));
                    gemini_add.newItemRenderedCallback = renderItemCallback;
                }

                if ($("#Type",popup).length > 0)
                {
                    setTimeout(function()
                    {
                        $("#Type",popup).val("@(Model.NonTestProject.Value)");
                        gemini_add.triggerChange($("#Type",popup));

                        gemini_ui.destroyHtmlEditor("#cs-popup-add-content #Description");
                        gemini_add.newItemRenderedCallback = renderItemCallback;
                    },500);
                }
                manualFailed = false;
            }
            var title = "@Html.Raw(GetResource(ResourceKeys.Failed)) @Html.Raw(GetResource(ResourceKeys.Step)) (@Html.Raw(GetResource(ResourceKeys.Run)) " + runId + ")";
            if($("#Title",popup).length > 0)
            {      
                setTimeout(function()
                {
                    $("#Title",popup).val(title);            
                },500);
            }
            if($("#Description", popup).length >0) {

                var tiny = tinymce.get('Description');
                if (!tiny)
                {
                    gemini_ui.htmlEditor("#Description", null, gemini_item.setPendingChanges);
                    tiny = tinymce.get('Description');
                    $('#Description').val('');
                }
                else
                {
                    tinymce.get('Description').setContent('');
                }

                var link = '<a href="'+ csVars.Url + csVars.ProjectUrl + 'item/' +caseId +'">'+ caseId +'</a>';
                var planLing = '<a href="'+ csVars.Url + csVars.ProjectUrl + 'item/' +planId +'">'+ planId +'</a>';
                var result = "Plan " + planLing + " - " + $('.item-title .title').html() + "<br/>&nbsp;&nbsp;Case " +  link + " " + $(".testing #Case option[value='"+caseId+"']").text() + " -> Step: " +  stepText + ' <br/>&nbsp;&nbsp;&nbsp;&nbsp;Expected result: ' + expected.html() + '<br/>&nbsp;&nbsp;&nbsp;&nbsp;Actual Result: ' +  actual.val();

                setTimeout(function()
                {
                    if (tiny)
                    {
                        if(tiny.targetElm != null && tiny.getContent().length == 0) {
                            gemini_ui.htmlEditorCommand('mceInsertContent', false, result,'Description');                    
                        }
                    }
                    else
                    {
                        $('#Description').val(result);
                    }

                },500);
               
                gemini_add.newItemCloseCallback = function () 
                {
                    $('#slider #inner .step[data-current="true"] textarea').focus();
                    $('#slider #inner .step[data-current="true"] textarea').click();
                    gemini_add.newItemRenderedCallback = null;
                    gemini_add.newItemRenderedCallbackOrig = null;
                }

            }

            $("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)_Type", popup).val("@(Countersoft.Gemini.Commons.IssueOriginatorType.TestRun)");

            var source = planId + "|" + runId + "|" + caseId + "|" + stepId;

            if($("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)", popup).length>0) 
            {
                $("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)", popup).val(source);
            } 
            else 
            {
                popup.find("form").append("<input type='hidden' value='" + source + "' name='@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)' id='@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)' />");
            }

            setTimeout( function()
            {
                var title = "@Html.Raw(GetResource(ResourceKeys.Failed)) @Html.Raw(GetResource(ResourceKeys.Step)) (@Html.Raw(GetResource(ResourceKeys.Run)) " + runId + ")";
                if($("#Title",popup).length > 0 && $("#Title",popup).val().length == 0)
                    {      
                        $("#Title",popup).val(title);            
                    }
                if($("#Description", popup).length >0) 
                {
                    gemini_ui.destroyHtmlEditor('#Description'); 

                    var tiny = tinymce.get('Description');
                    if (!tiny)
                    {
                        gemini_ui.htmlEditor("#Description", null, gemini_item.setPendingChanges);
                        tiny = tinymce.get('Description');
                        $('#Description').val('');
                    }
                    else
                    {
                        tinymce.get('Description').setContent('');
                    }

                    var link = '<a href="'+ csVars.Url + csVars.ProjectUrl + 'item/' +$('.testing #Case').val() +'">'+ $('.testing #Case').val() +'</a>';
                    var planLing = '<a href="'+ csVars.Url + csVars.ProjectUrl + 'item/' +planId +'">'+ planId +'</a>';
                    var result = "Plan " + planLing + " - " + $('.item-title .title').html() + "<br/>&nbsp;&nbsp;Case " +  link + " " + $(".testing #Case option[value='"+$('.testing #Case').val()+"']").text() + " -> Step: " +  stepText + '<br/>&nbsp;&nbsp;&nbsp;&nbsp;Expected Result: ' + expected.html() + '<br/>&nbsp;&nbsp;&nbsp;&nbsp;Actual Result: ' + actual.val();

                    if (tiny && tiny.getContent().length == 0)
                    {
                        gemini_ui.htmlEditorCommand('mceInsertContent', false, result,'Description');                    
                    }
                    else if($("#Description",popup).val().length == 0)
                    {
                        $('#Description').val(result);
                    }
       
                    gemini_add.newItemCloseCallback = function () 
                    {
                        $('#slider #inner .step[data-current="true"] textarea').focus();
                        $('#slider #inner .step[data-current="true"] textarea').click();
                        gemini_add.newItemRenderedCallback = null;
                        gemini_add.newItemRenderedCallbackOrig = null;
                    }
                }

                $("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)_Type", popup).val("@(Countersoft.Gemini.Commons.IssueOriginatorType.TestRun)");

                var source = planId + "|" + runId + "|" + caseId + "|" + stepId;

                if($("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)", popup).length>0 && $("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)",popup).val().length == 0) 
                {
                    $("#@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)", popup).val(source);
                } 
                else 
                {
                    popup.find("form").append("<input type='hidden' value='" + source + "' name='@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)' id='@(Countersoft.Gemini.Commons.Permissions.ItemAttributeVisibility.Source)' />");
                }
            }, 2000);

            setTimeout( function()
            {
                failstep(false);
            },2500);
        };

        gemini_add.newItemRenderedCallback = renderItemCallback;

        gemini_add.newItemCreatedCallback = function(id) {
            if(needRefreshRun) gemini_commons.refreshPage();
        };
        gemini_add.hidePlan = true;
        gemini_add.hideProject = true;

        gemini_commons.showAddItem();
        gemini_ui.stopBusy("#run-fail-create");
        //alert("this is not yet working, please use the PLUS icon to create a new item");
    });

    $("#run-fail-run").click(function(e) {

        //var stepId = parseInt($('ol li.current a').attr('rel'));
        var step = $('ol li.current').attr('id');
        var stepId = step.replace('step-', '');
        var actual = $('#actual-' + stepId, '#slider').val();


        gemini_popup.modalConfirm("@Html.Raw(GetResource(ResourceKeys.FailRunMessage))", null, function () {
            gemini_ajax.call("apps/countersoft/testing/runner", "failrun",
                function (response) {
                    if(response.Result.Data == "refresh") {
                        gemini_commons.refreshPage();
                        return;
                    }
                    $("#slider").closest("div.contents").html(response.Result.Data.Html);
                }, null, { planid: planId, runid: runId, caseId: caseId, stepid: stepId, description: actual }, null, true);
        });
    });

    $('#slider #steps li').click(function (e) {
        if ($(this).hasClass('active'))
        {
            $('.current',$(this).parent()).removeClass('current');
            $(this).addClass('current');

            $('#slider #inner .step').attr('data-current','false');
            $('#slider #inner .step[data-stepid="'+$(this).attr('id')+'"]').attr('data-current','true');

            var stepid = $(this).attr('data-stepid');
            
            $('#actual-' + stepid  , '#slider').val($('#actual-' + stepid  , '#slider').val().replace(/<br\/>/g, '\r\n'));

            setUploadAttachmentPosition($(this).attr('data-stepid'));
        }
    });

    setUploadAttachmentPosition();
    function setUploadAttachmentPosition(stepId)
    {
        var currentStepTd;

        if (stepId)
            currentStepTd = $('#slider #inner #runner-attachment-container-' + stepId);
        else
            currentStepTd = $('#slider #inner div[data-current="true"] table tr:last td:last');

        var position = currentStepTd.position();
        $('#slider #attachment').css('top',position.top + 3).css('left',position.left + (currentStepTd.width()) - 13);
    }

    $("#run-reset").click(function (e) {
        var step = $('ol li.current').attr('id');
        var stepId = step.replace('step-', '');

        //var stepId = parseInt($('ol li.current a').attr('rel'));

        gemini_popup.modalConfirm("@Html.Raw(GetResource(ResourceKeys.ResetConfirm))", null, function() {

            gemini_ajax.call("apps/countersoft/testing/runner", "reset",
                function (response) {
                    $("#slider").closest("div.contents").html(response.Result.Data.Html);
                }, null, { caseid: caseId, runId: runId, stepId: stepId, planId: planId }, null, true);
        });

    });

    $('#slider #run-cancel').click(function () {
        gemini_popup.modalConfirm("@Html.Raw(GetResource(ResourceKeys.CancelRun))", null, function() {

            gemini_ajax.call("apps/countersoft/testing/runner", "cancel",
                function (response) {
                    if (response.success)  gemini_commons.refreshPage();
                }, null, { runId: runId, planId: planId}, null, true);
        });
    });

    </script>
}
