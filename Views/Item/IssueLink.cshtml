@model ViewIssueModel
<div>
    <input type="hidden" id="links-find-item-id"/>
    <div id="links-find-item-container" class="hide">
        <form name="links-form">
            <span class="left">@GetResourceTemplate(ResourceKeys.Item)</span>
            <input class="left input-size6 required" id="links-find-item" name="linksFindItem" type="text"/>        
            @Html.DropDownList("linktypes", Model.IssueLinkTypes, new {@class="input-size5 left"})
            <span class="fonticon-tick left"></span>
            <span class="fonticon-cross left"></span>
        </form>
    </div>
    
    @if (Model.Issue.Links.Count() > 0) {
        <table cellpadding="0" cellspacing="0">
        <tr>
            <th>@GetResource(ResourceKeys.LinkType)</th>
            <th>@GetResource(ResourceKeys.Item)</th>
            <th>@GetResource(ResourceKeys.Type)</th>
            <th>@GetResource(ResourceKeys.Status)</th>
            <th>@GetResource(ResourceKeys.Title)</th>
            <th></th>
        </tr>
        @foreach (var link in Model.Issue.Links)
        {
            var issue = link.Issue.Id == Model.Issue.Id ? link.OtherIssue : link.Issue;
            <tr data-id="@issue.Id">
                <td>@link.LinkType</td>
                <td><a target="_blank" href='@Url.Action("Item", "Item", new RouteValueDictionary(new {  id = issue.Project.Id, issueid = issue.Id }))' >@issue.IssueKey</a></td>
                <td>@issue.Type</td>
                <td>@issue.Status</td>
                <td>@issue.Title</td>
                <td>@if(CanDoItemAction(UserAction.Delete, ItemAttributeVisibility.AssociatedLinks)) {<span class="cursor-pointer action-button-delete" alt="@link.LinkType" title="@GetResource(ResourceKeys.Delete) @GetResource(ResourceKeys.Link)"></span>}</td>
            </tr>
        }         
    </table>
    }

</div>