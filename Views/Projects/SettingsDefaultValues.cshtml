@model DefaultValuesModel

@using Countersoft.Gemini.Infrastructure.Grid;
@{
    var classes = new Dictionary<string, object>();
    classes.Add("class", "admin-data-entry cs-no-hover");
    
    var required = new Dictionary<string, object>();
    required.Add("class", "bold");

    var blank = new Dictionary<string, object>();
    
    var alignLeft = new Dictionary<string, object>();
    alignLeft.Add("style", "text-align:left;");

    var dataTD = new Dictionary<string, object>();
    dataTD.Add("class", "td-data");
}

<div>
    <div id="defaults-container">
        <form id="defaults-form" enctype="multipart/form-data" method="post">
            @{
                var fields = Model.Fields.FindAll(f => !f.Value.Hidden);
            }
            
            <div class="margin-bottom-20">
                @Html.DropDownList("defaulttype", Model.Types, new { @class="input-size10" })
            </div>

            <div style="margin: 0 auto;">
            @Html.Grid(fields).Attributes(classes).Columns( 
                col => 
                    { 
                        col.For(x=> x.Key).Attributes( x=> x.Item.Value.Required ? required : blank);
                        col.For(x => Html.Partial(x.Value.TemplateFile, x.Value)).Attributes(x => dataTD);
                    }
                   ).RenderHeaders(false).RowAttributes(x => classes)
            </div>
        </form>

        <div class="margin-top-20">
            <input type="button" class="defaults-save button-primary" value="@GetResource(ResourceKeys.Save)" />
        </div>
    </div>
</div>

<script type="text/javascript">

    $(".defaults-save").click(function (e) {
        gemini_ui.startBusy('#defaults-container .defaults-save');
        gemini_ajax.postCall("project/@(Model.ProjectId)/settings/defaults", 'save', function () {
            gemini_popup.toast('@(GetResource(ResourceKeys.Saved))');
            gemini_ui.stopBusy('#defaults-container .defaults-save');
        }, function () { gemini_ui.stopBusy('#defaults-container .defaults-save'); }, $('#defaults-form').serialize(), null, true);
    });
    
    $('#defaulttype', '#defaults-form').change(function () {
        gemini_projects.settingsDefaults(@(Model.ProjectId), $(this).val());
    });
    gemini_ui.chosen('#defaults-form select', null, false);
    gemini_ui.datePicker('#defaults-form .datepicker');
    gemini_ui.htmlEditor('#defaults-form .wysiwyg-editor');
    $("#defaults-form input[type='text']:first").focus();

     $('#setting-zone').find('*[data-customfield-trigger]').change(function (index) {
            defaultsTriggerCustomfieldChange(this);
        });

    $('#setting-zone').find('*[data-customfield-trigger]').each(function (index) {
        if ($(this).data("customfield-trigger") == "P") {
            defaultsTriggerCustomfieldChange(this);
        }
    });

    function defaultsTriggerCustomfieldChange(elem) {

        var trigger = $(elem).data('customfield-trigger');

        if (trigger == '') return;

        var id = $(elem).attr("id").replace("cf_", "");

        var selectedval = "";
        $(elem).find("option:selected").each(function (index) {
            selectedval += $(this).val() + "|";
        });
        if (selectedval.length > 0)
            selectedval = selectedval.slice(0, -1); //remove trailing |

        gemini_ajax.postCall("", "cascade", defaultsCascadeUpdate, null,
            {
                fieldid: id, value: selectedval,
                projectid: null,
                issueid: 0
            });
    }
     function defaultsCascadeUpdate(response) {
        var data = response.Result.Data;

        for (var i = 0; i < data.length; i++) {
            var item = data[i];
            //get preselected list

            var presel = "";
            $("#" + item.Key, "#setting-zone").find("option:selected").each(function () {
                presel += "|" + $(this).val() + "|";
            });

            $("#" + item.Key, "#setting-zone").empty();
            for (var j = 0; j < item.Value.length; j++) {
                var selected = "";
                if (item.Value[j].Selected || presel.indexOf("|" + item.Value[j].Value + "|") >= 0) {
                    selected = " selected='selected' ";
                }
                $("#" + item.Key, "#setting-zone").append("<option " + selected + "value='" + item.Value[j].Value + "'>" + item.Value[j].Text + "</option>");
            }
            if (item.Value.length == 0) {
                $("#" + item.Key, "#setting-zone").append("<option  value='0'>-- none --</option>");
            }

            gemini_ui.chosenUpdate($("#" + item.Key, "#setting-zone"));
            //call update on this.
            $("#" + item.Key, "#setting-zone").change();
        }
    }
    
</script>

