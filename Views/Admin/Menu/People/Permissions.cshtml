@model PeoplePermissionsModel

<p id="tab-help-message"><strong>&#187;</strong>&nbsp;For each project specify which <strong>Groups</strong> can do what from the list of available <strong>Permissions.</strong> Impose restrictions such as only allowing certain <strong>Groups</strong> to be assigned work or limiting <strong>Groups</strong> to only see their own items.</p>

<div class="admin-datatable-holder">
    <table id="table-admin-permissionset" class="basic">
        <thead>
            <tr>
                <th data-field="Name" data-required='true'>Name

                </th>
                <th data-field="Description">Description</th>   
                <th data-field="Projects">Projects</th>   
                <th></th>             
            </tr>
        </thead>        
        <tbody>
            @foreach (PermissionSetDto item in Model.Permissions)
            {
                <tr data-id="@item.Entity.Id">
                    <td>@item.Entity.Name</td>
                    <td>@item.Entity.Description</td>
                    <td data-edit="false">@item.AssociatedProjects</td>
                    <td data-edit="false" class="actions">
                        <span class="action-button-edit cursor-pointer" title="@GetResource(ResourceKeys.Edit)" data-method="edit"></span>
                        <span class="action-button-delete cursor-pointer" title="@GetResource(ResourceKeys.Delete)" data-method="delete"></span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        gemini_admin.initDatatablesWithEdit("#table-admin-permissionset", false, null, { "aoColumnDefs": [{ "bSortable": false, "aTargets": [2] }] });

        $("#table-admin-permissionset").off('click', "span[data-method='delete']").on('click',"span[data-method='delete']", function () {
            var item = $(this);
            var id = item.closest("tr").data("id");

            gemini_popup.modalConfirm("Delete Permission Set?", null, function () {
                gemini_ui.startBusy('#colorbox2 #modal-confirm #modal-button-yes');
                gemini_ajax.call("configure/People/Permissions", "Delete", function (delResponse) {
                    if (delResponse.Success) {
                        gemini_admin.removeRow(item);
                        gemini_ui.stopBusy('#modal-confirm #modal-button-yes');
                    }
                }, function () { gemini_ui.stopBusy('#modal-confirm #modal-button-yes'); }, { id: id }, null, true);
            });
        });
        
        $("#table-admin-permissionset").off('click', ".actions span[data-method='edit']").on('click',".actions span[data-method='edit']", function () {
            var item = $(this);
            var id = item.closest("tr").data("id");
            gemini_popup.centerPopup("configure/People/Permissions", "Editor", { id: id }, null, null, null, null, null, null, true);
        });

        $("#table-admin-permissionset_wrapper").prepend("<div id='add-button-container'><input id='system-options-add' type='button' value='Add' class='button-primary'></div>");
    
        $("#system-options-add").click(function () {
            gemini_popup.centerPopup("configure/People/Permissions", "Add", null, null, null, null, null, null, null, true);
        });
    });
</script>
