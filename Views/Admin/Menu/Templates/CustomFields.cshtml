@model Countersoft.Gemini.Models.Admin.TemplatesCustomFieldsModel

@{Html.RenderPartial("~/Views/Admin/Menu/Templates/_Template.cshtml", Model.Templates);}

<p id="tab-help-message"><strong>&#187;</strong>&nbsp;If you need <strong>Custom Fields</strong> for your project then define them here. <strong>Custom Field</strong> visibility is controlled via <strong>Process &#62; Screens</strong> after you have created them. <strong>Custom Fields</strong> are template specific.</p>

<div class="admin-datatable-holder">
    <table id="table-admin-customfields" class="basic">
        <thead>
            <tr>
                <th data-field="Name" data-required='true'>Custom Field</th>          
                <th data-field="ScreenLabel" data-required='true'>Screen Label</th>
                <th data-field="ScreenDescription">Description</th>
                <th data-edit="false">Type</th>
                <th></th>
            </tr>
        </thead>        
        <tbody>
            @foreach (var item in Model.CustomFields)
            {
                <tr data-id="@item.Id">
                    <td>@item.Name</td>                
                    <td>@item.ScreenLabel</td>                
                    <td>@item.ScreenDescription</td>                
                    <td data-edit="false">
                        @Model.Types.First(t=>t.Value == item.Type).Text
                    </td>
                    <td data-edit="false" class="actions" >
                        <span class="action-button-edit cursor-pointer" title="@GetResource(ResourceKeys.Edit)" data-method="edit"></span>
                        <span class="action-button-delete cursor-pointer" title="@GetResource(ResourceKeys.Delete)" data-method="delete"></span>
                        @if (!item.UseStaticData && (item.Type == Constants.CUSTOM_FIELD_TYPE_LIST || item.Type == Constants.CUSTOM_FIELD_TYPE_COMBO))
                        {
                        <span class="action-button-options cursor-pointer" data-method="lookup" title="@GetResource(ResourceKeys.Options)"></span>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        gemini_admin.initDatatablesWithEdit("#table-admin-customfields", false, null, { "aoColumnDefs": [{ "bSortable": false, "aTargets": [4] }] });
        
        //Remove previous events, as the on events were firing multiple times - events getting rebound on ajax loads.
        $("#table-admin-customfields").off('click', "span[data-method='delete']").on('click', "span[data-method='delete']", function (e)
        {
            var item = $(this);
            var id = item.closest("tr").data("id");

            gemini_ajax.call("configure/Templates/CustomFields", "DeleteMessage", function (response)
                {
                gemini_popup.modalConfirm(response.Result, null, function () {
                    gemini_ui.startBusy('#colorbox2 #modal-confirm #modal-button-yes');
                    gemini_ajax.call("configure/Templates/CustomFields", "Delete", function (delResponse) {
                        if (delResponse.Success) {
                            gemini_admin.removeRow(item);                           
                        }
                        gemini_ui.stopBusy('#modal-confirm #modal-button-yes');
                    }, function () { gemini_ui.stopBusy('#modal-confirm #modal-button-yes'); }, { id: id }, null, true);
                });
            },
                null, { id: id }, null, true);
        });

        $("#table-admin-customfields").off('click', ".actions span[data-method='edit']").on('click', ".actions span[data-method='edit']", function ()
        {
            var item = $(this);
            var id = item.closest("tr").data("id");
            gemini_popup.centerPopup("configure/Templates/CustomFields", "Editor", { id: id, mode: "edit", template: gemini_admin.currentTemplate }, null, null, null, null, null, null, true);
        });

        $("#table-admin-customfields").off('click', ".actions span[data-method='lookup']").on('click', ".actions span[data-method='lookup']", function ()
        {
            var item = $(this);
            var id = item.closest("tr").data("id");
            gemini_popup.centerPopup("configure/Templates/CustomFields", "Editor", { id: id, mode: "lookup" }, null, null, 'Close', true, false, null, true);
        });

        $("#table-admin-customfields_wrapper").prepend("<div id='add-button-container'><input id='system-options-add' type='button' value='Add' class='button-primary'></div>");

        $("#system-options-add").click(function () {
            gemini_popup.centerPopup("configure/Templates/CustomFields", "Add", { template: gemini_admin.currentTemplate }, null, null, null, null, null, null, true);
        });
    });
</script>