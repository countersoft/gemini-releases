@model TemplatesMenusModel

@{Html.RenderPartial("~/Views/Admin/Menu/Templates/_Template.cshtml", Model.Templates);}

<p id="tab-help-message"><strong>&#187;</strong>&nbsp;Choose the <strong>Menu</strong> options that projects in this template will use and the groups that should have access to each menu option. <strong>Menu Divider</strong> will place a menu break after the option.</p>

<div class="templates">
    <form id="templates-menu-form" action="" method="post" autocomplete="off">
        <ul class="menu">
            @foreach (var item in Model.Menu)
            {
                <li @if (item.Selected) { <text>class="highlight"</text> }>
                    <span class='dragHandle fonticon-drag-handle'></span>
                    
                    <input type="checkbox" id="@string.Concat("chk",item.PageType, '_', item.AppId, '_', item.ControlId)" name="@string.Concat("chk",item.PageType, '_', item.AppId, '_', item.ControlId)" data-appid="@item.AppId" data-controlid="@item.ControlId" class="menu-option fancy"
                        @if (item.Selected) { <text>checked="checked"</text> } data-project-groups='@item.ProjectGroups.ToDelimited("|")' />
                        
                    <div id="attribute-options-trigger" class="valign-top"><span class="fonticon-person"></span><span class="fonticon-arrow-down"></span></div>
                    
                    <label class="valign-top" for="@string.Concat("chk",item.PageType, '_', item.AppId, '_', item.ControlId)">
                        @if(item.PageType != ProjectTemplatePageType.Custom)
                        {
                            @item.PageType
                            if (item.Label.HasValue() && item.Label != item.PageType.ToString())  { <text>(@item.Label)</text> }
                        }
                        else
                        {
                            @item.Label<text>&nbsp;(Custom)</text>
                        }
                    </label>

                    <div class="options right">
                        <input type="checkbox" id="@string.Concat("brk",item.PageType, '_', item.AppId, '_', item.ControlId)" name="@string.Concat("brk",item.PageType, '_', item.AppId, '_', item.ControlId)" class="break-option fancy"
                            @if (item.SeperateAfter) { <text>checked="checked"</text> }/>
                        
                        <label for="@string.Concat("brk",item.PageType, '_', item.AppId, '_', item.ControlId)">Start of menu</label>
                    </div>
                </li>
            }
        </ul>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function ()
    {

        $(".menu-option").bind('ifChanged', function (e) {
            $(this).parent().parent().toggleClass("highlight");
            saveData();
        });

        $(".break-option").bind('ifChanged', function (e) {
            var _this = this;
            $(".break-option").each(function () {
                if (_this != this) {
                    $(this).prop("checked", false);
                    $(this).iCheck('update');
                }
            });
            saveData();
        });
        
        $(".menu", ".templates").sortable({
            forcePlaceholderSize: true,
            placeholder: "drag-placeholder",
            containment: ".menu",
            delay: '150',
            items: ".highlight",
            start: function (event, ui) {
                $(ui.helper).addClass("drag-highlight");
            },
            stop: function (event, ui) {
                $(ui.item).removeClass("drag-highlight");                
                saveData();             
            }
        });

        gemini_ui.fancyInputs('#templates-menu-form .fancy');

        gemini_admin.attributeOptionsPicker('#templates-menu-form #attribute-options-trigger', function (e) {
            return $(e).parent().find("input:eq(0)");
            }, 
            false,
            function () {
                saveData();
        });
    });
    
    function saveData()
    {
        var data = [];
        $('input[type="checkbox"]:checked', '#templates-menu-form').each(function (e) {     
            var id = $(this).attr('id');

            if (id.indexOf('chk') == 0) {
                data.push({
                    Id: id,
                    SeperateAfter: $('#' + id.replace('chk', 'brk')).is(':checked'),
                    ProjectGroups: $(this).attr('data-project-groups'),
                });
            }    
        });

        if ($('#attribute-options-picker').is(':visible')) gemini_ui.startBusy('#attribute-options-picker #option-apply-button');
       
        gemini_ajax.postCall("configure/Templates/Menus", "savedata", function () { if ( $.trim($('#attribute-options-picker #option-apply-button').val()) == '') gemini_ui.stopBusy('#attribute-options-picker #option-apply-button'); }, function () { if ($.trim($('#attribute-options-picker #option-apply-button').val()) == '') gemini_ui.stopBusy('#attribute-options-picker #option-apply-button'); }, { Template: gemini_admin.currentTemplate, data: JSON.stringify(data) });
    }
</script>
